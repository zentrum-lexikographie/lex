#!/usr/bin/env python

import logging
from pathlib import Path
import subprocess

import clean
import clj
import version

project_dir = (Path(__file__) / '..' / '..').resolve()

logging.basicConfig(format='%(asctime)s %(message)s', level=logging.INFO)

current_version = version.current_version()
logging.info({'version': current_version})


def build_module(name, aliases):
    logging.info({'name': name, 'aliases': aliases})
    clj.run([':'.join(['-A'] + aliases)],
            cwd=(project_dir / name).as_posix(),
            check=True)


def build_docker(name, tag):
    logging.info({'docker': name, 'tag': tag, 'version': current_version})
    subprocess.run(
        ['docker', 'build', '.', '-t', ':'.join((tag, current_version))],
        cwd=(project_dir / 'docker' / name).as_posix(),
        check=True
    )


clean.all_classes()

# Git tags --> version.edn
build_module('build', ['version'])

# RNC --> RNG/Schematron
build_module('build', ['schema'])

for module in ['client', 'server', 'validator']:
    build_module(module, ['dev', 'prod', 'compile'])
    build_module(module, ['dev', 'prod', 'package'])

for module in ['server', 'validator']:
    build_docker(module, 'vm.local/zdl-lex/' + module)

clean.all_classes()
